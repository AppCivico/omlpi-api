swagger: "2.0"
info:
  description: 'The backend of the OMLPL project'
  version: 1.2.2
  title: OMLPL API
  contact:
    email: carlos@appcivico.com
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'

host: dev-omlpi-api.appcivico.com
basePath: /v1
schemes:
  - https
produces:
  - application/json

tags:
  - name: areas
    description: All about the thematic axis
  - name: locales
    description: A locale can be a city, a region, a state or a country
  - name: data
    description: Indicators and breakdown data from locales
  - name: classification
    description: Data breakdown classifications

paths:
  /areas:
    get:
      x-mojo-to: 'areas#list'
      operationId: listAreas
      tags:
        - areas
      summary: List all thematic axis
      responses:
        200:
          description: List of areas
          schema:
            $ref: '#/definitions/Areas'
  /locales:
    get:
      x-mojo-to: 'locales#list'
      operationId: listLocales
      tags:
        - locales
      summary: List all available locales
      responses:
        200:
          description: List locales
          schema:
            $ref: '#/definitions/Locales'
  /data:
    get:
      operationId: showData
      x-mojo-to: 'data#get'
      summary: Retrieve data from a specific locale
      tags:
        - data
      parameters:
        - name: locale_id
          in: query
          required: true
          description: The id of the locale to retrieve data from
          type: integer
        - name: area_id
          in: query
          description: Filter data by an area
          required: false
          type: integer
        - name: year
          in: query
          type: integer
          description: Filter data by year
          required: false
          enum:
            - 2017
            - 2018
            - 2019
      responses:
        200:
          description: Info for a specific locale
          schema:
            $ref: '#/definitions/Locale'
  /data/compare:
    get:
      summary: Make a comparison between two locales
      x-mojo-to: 'data-compare#get'
      operationId: showDataCompare
      tags:
        - data
      parameters:
        - name: locale_id
          description: The id of the locale to retrieve data from
          in: query
          type: array
          required: true
          items:
            type: integer
          uniqueItems: true
          minItems: 2
          maxItems: 2
        - name: year
          in: query
          type: integer
          description: Filter data by year
          required: false
          enum:
            - 2017
            - 2018
            - 2019
      responses:
        200:
          description: The comparison between two locales
          schema:
            type: object
            properties:
              comparison:
                type: array
                items:
                  $ref: '#/definitions/Locale'
  /classifications:
    get:
      summary: Get a list of all data breakdown classifications
      x-mojo-to: 'classifications#get'
      operationId: showClassifications
      tags:
        - classification
      responses:
        200:
          description: List of classifications
          schema:
            $ref: '#/definitions/Classifications'
definitions:
  Areas:
    type: object
    properties:
      areas:
        type: array
        items:
          $ref: '#/definitions/Area'
  Area:
    type: object
    properties:
      id:
        type: integer
        example: 2
      name:
        type: string
        example: Educação
  Locale:
    type: object
    properties:
      id:
        type: integer
        example: 3550308
      name:
        type: string
        example: São Paulo
      type:
        type: string
        enum:
          - country
          - region
          - state
          - city
        example: city
      indicators:
        type: array
        items:
          $ref: '#/definitions/Indicator'
  Indicator:
    type: object
    properties:
      id:
        type: integer
        example: 5
      name:
        type: string
        example: 'Número de matrículas de educação infantil - Creche'
      area:
        $ref: '#/definitions/Area'
      base:
        type: string
        example: 'INEP: Censo Escolar - Matrículas'
      values:
        type: object
        properties:
          year:
            type: integer
            enum:
              - 2017
              - 2018
              - 2019
            example: 2019
          value_relative:
            type: integer
            example: 0.25
          value_absolute:
            type: integer
            example: 630.3
      subindicators:
        type: array
        items:
          properties:
            classification:
              type: string
              example: Sexo
            data:
              type: array
              items:
                type: object
                properties:
                  description:
                    type: string
                    example: Feminino
                  id:
                    type: integer
                    example: 28
                  values:
                    type: object
                    properties:
                      value_relative:
                        type: integer
                        example: 3.7
                      value_absolute:
                        type: integer
                        example: 8909
                      year:
                        type: integer
                        example: 2019
  Locales:
    type: object
    properties:
      locales:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 3550308
            name:
              type: string
              example: São Paulo
            type:
              type: string
              example: city
              enum:
                - country
                - region
                - state
                - city
  Classifications:
    type: object
    properties:
      classifications:
        type: array
        items:
          type: string
          example: Sexo
  Error:
    type: object
    required:
      - error
      - message
    properties:
      error:
        type: string
        enum:
          - internal_server_error
          - page_not_found
          - permission_denied
          - method_not_allowed
      message:
        type: string